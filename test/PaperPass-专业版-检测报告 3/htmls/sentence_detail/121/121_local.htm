<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
body,td,th {
font-family: "微软雅黑";
font-size: 13px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
demo_padding {
line-height: 30px;
}
html
{
overflow-x:hidden;
overflow-y:scroll;
}
.liebiao {
border-bottom-width: 1px;
border-bottom-style: dashed;
border-bottom-color: #CCCCCC;
height: 0px;
margin-top:10px;
margin-bottom:10px;
float: left;
width: 90%;
}
.liebiao ul {
list-style-type: none;
display: block;
margin: 0px;
clear: none;
}
.zhengwen {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px dashed #999999;
padding-right: 10px;
padding-left: 10px;
}
.shubu{
float: left;
height: 15px;
width: 15px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
font-size: 13px;
}
.kuang {
border: 1px solid #999999;
}
.red{color:#FF0000}
.orange{color:#FF6600}
.green{color:#008000}

a:hover {color:#000000}
a:active {color:#000000}

a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>
<div class="zhengwen"><a href="121.htm">综合<sup>13</sup></a>&nbsp;&nbsp;|&nbsp;&nbsp;<b>本地库<sup>13</sup></b>（<a href="121_periodical.htm">期刊<sup>7</sup></a>、<a href="121_thesis.htm">学位<sup>6</sup></a>、<a href="121_conference.htm">会议<sup></sup></a>、<a href="121_book.htm">图书<sup>No</sup></a>）&nbsp;&nbsp;|&nbsp;&nbsp;<a href="121_net.htm">互联网<sup></sup></a><br /></div>
<div class="zhengwen">
语句：<span class='orange' >Java中有许多的设计模式，比如装饰器模式、代理模式、工厂模式、单例模式等，下面着重介绍几种设计模式。</span><br><br>
<div style="display:none;">该句相似度：<span class='orange' >48</span>%<a href='#xiugaijianyi' style='padding-left:30px;'>查看该句修改建议</a><b>（ChaoXidudutishiTorpalces87sbqwopahasw4）</b><br><br></div>
在本地库共找出相似内容：13个
</div>

<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">1</div>
<font color="#666666">相似度：</font><span class='orange' >48</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >Java中有许多的<span style="background:#cbcbcb">设计</span><span style="background:#cbcbcb">模式</span>，比如<span style="background:#cbcbcb">装饰</span>器<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、工厂<span style="background:#cbcbcb">模式</span>、单例<span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">等</span>，下面着重介绍几种<span style="background:#cbcbcb">设计</span><span style="background:#cbcbcb">模式</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">结构型<span style="background:#cbcbcb">设计</span><span style="background:#cbcbcb">模式</span>，如合成<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">装饰</span><span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、享元<span style="background:#cbcbcb">模式</span>、门面<span style="background:#cbcbcb">模式</span>、桥梁<span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">等</span>。行为型模式，如</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……组件中重复出现的结构，这种结构解决在一定的背景中的具有一般性的设计问题。设计模式常常划分成不同的种类，常见的种类有：创建型设计模式，如工厂方法模式、抽象工厂模式、原型模式、单例模式，建造模式等。<span class='green'>结构型设计模式，如合成模式、装饰模式、代理模式、享元模式、门面模式、桥梁模式等。行为型模式，如</span>模版方法模式、观察者模式、迭代模式、责任链模式、备忘录模式、命令模式、状态模式、访问者模式等等[25……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《基于SOA架构的物流及其增值服务计费系统的研究与实现》<br><b>作者：</b>谢逸<br><b>分类号：</b>TP393.09<br><b>学科专业：</b>软件工程<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>袁志璎<br><b>学位授予单位：</b>上海交通大学<br><b>学位年度：</b>2011<br><b>关键词：</b>物流管理 增值服务计费系统 企业应用集成 面向服务架构 异构ERP系统
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">2</div>
<font color="#666666">相似度：</font><span class='orange' >47</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >Java中有许多的设计<span style="background:#cbcbcb">模式</span>，比如<span style="background:#cbcbcb">装饰</span>器<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、工厂<span style="background:#cbcbcb">模式</span>、单例<span style="background:#cbcbcb">模式</span>等，下面着重介绍几种设计<span style="background:#cbcbcb">模式</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">、缺省适配器<span style="background:#cbcbcb">代理</span>、合成<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">装饰</span><span style="background:#cbcbcb">模式</span>、代办<span style="background:#cbcbcb">模式</span>、享元不变、门面策略、桥梁<span style="background:#cbcbcb">模式</span>、不乱<span style="background:#cbcbcb">模式</span>、战略<span style="background:#cbcbcb">模式</span>、</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……模式有：工厂方式模式、适配器模式、缺省适方法模式、解释器对象、模版方式模式等。属于东西模式的设计方法有：简单工厂模式、工厂方式模式、抽象工厂模式建造单例模式、多例模式、制作模式、原始模型模式、适配器模式<span class='green'>、缺省适配器代理、合成模式、装饰模式、代办模式、享元不变、门面策略、桥梁模式、不乱模式、战略模式、</span>观察者模式、迭命令予模式、责任链模式、下令模式、访问录模式、调停态模式、会见者模式、补救者模式等……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《基于设计模式的数据库连接池技术和应用》<br><b>作者：</b>李富中<br><b>分类号：</b>TP319<br><b>学科专业：</b>计算机技术<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>高峰<br><b>学位授予单位：</b>山东大学<br><b>学位年度：</b>2006<br><b>关键词：</b>面向对象技术 设计模式 数据库连接池 软件开发
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">3</div>
<font color="#666666">相似度：</font><span class='orange' >47</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >Java中<span style="background:#cbcbcb">有</span>许多<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">设计</span><span style="background:#cbcbcb">模式</span>，比如<span style="background:#cbcbcb">装饰</span>器<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">工厂</span><span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">单例</span><span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">等</span>，下面着重介绍几种<span style="background:#cbcbcb">设计</span><span style="background:#cbcbcb">模式</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">有</span><span style="background:#cbcbcb">单例</span><span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">工厂</span><span style="background:#cbcbcb">模式</span>、适配器<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">装饰</span><span style="background:#cbcbcb">模式</span>、观察者<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">等</span>.<span style="background:#cbcbcb">工厂</span><span style="background:#cbcbcb">模式</span>是常用<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">设计</span><span style="background:#cbcbcb">模式</span>，</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……可以反复使用、多数人知晓的设计方案，是经验总结.JavaEE主流框架应用了多个设计模式完成，设计模式是JavaEE的重要理论基础.最为著名的四人帮的《设计模式》[1]书中介绍了23种基本设计模式，最常用的设计模式<span class='green'>有单例模式、工厂模式、适配器模式、装饰模式、观察者模式、代理模式等.工厂模式是常用的设计模式，</span>在JavaEE的Spring框架中就有具体的应用.工厂模式符合开闭原则，对扩展开放，对修改关闭.工厂模式[2]一般……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《抽象工厂模式探讨》<br><b>作者：</b>程裕强<br><b>作者单位：</b>玉林师范学院 数学与信息科学学院,广西 玉林,537000<br><b>参考文献：</b>3篇<br><b>页码：</b>P82—P86<br><b>页数：</b>5页<br><b>分类号：</b>TP39<br><b>机标分类号：</b>TP3 TP2<br><b>期刊名称：</b>《玉林师范学院学报》<br><b>出版时间：</b>2014年2期<br><b>ISSN：</b>1004-4671<br><b>关键词：</b>设计模式 工厂模式 抽象工厂模式<br><b>摘要：</b>工厂模式是常用的设计模式，一般分为简单工厂模式、工厂方法模式、抽象工厂模式三类。工厂方法模式是对简单工厂模式推广，抽象工厂模式是对工厂方法模式推广。简单工厂模式和工厂方法模式是针对单个产品族的问题，如果对应于多个产品族，则不宜解决。针对这一问题，本文通过Java语言实现了抽象方法模式来解决多个产品族的问题。
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">4</div>
<font color="#666666">相似度：</font><span class='orange' >45</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >Java中有许多的设计<span style="background:#cbcbcb">模式</span>，比如<span style="background:#cbcbcb">装饰</span>器<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、工厂<span style="background:#cbcbcb">模式</span>、单例<span style="background:#cbcbcb">模式</span>等，下面着重介绍几种设计<span style="background:#cbcbcb">模式</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">模式</span>、桥接<span style="background:#cbcbcb">模式</span>、组合<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">装饰</span><span style="background:#cbcbcb">模式</span>、外观<span style="background:#cbcbcb">模式</span>、享元<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、职责链<span style="background:#cbcbcb">模式</span>、命令<span style="background:#cbcbcb">模式</span>、</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……的知识和能力。课程内容以GoF的23类设计模式为主要讲授内容，包括统一建模语言基础知识、面向对象设计原则、设计模式概述、简单工厂模式、工厂方法模式、抽象工厂模式、建造者模式、原型模式、单例模式、适配器<span class='green'>模式、桥接模式、组合模式、装饰模式、外观模式、享元模式、代理模式、职责链模式、命令模式、</span>解释器模式、迭代器模式、中介者模式、备忘录模式、观察者模式、状态模式、策略模式、模板方法模式……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《设计模式课程渐近式学做一体教学改革探索》<br><b>作者：</b>卞琛 修位蓉<br><b>作者单位：</b>乌鲁木齐职业大学信息工程学院,新疆乌鲁木齐830002；新疆大学信息科学与工程学院,新疆乌鲁木齐830046；乌鲁木齐市技工学校信息工程部,新疆乌鲁木齐,830031<br><b>参考文献：</b>5篇<br><b>页码：</b>P35—P37,44<br><b>页数：</b>4页<br><b>分类号：</b>G719.21<br><b>期刊名称：</b>《新疆职业教育研究》<br><b>出版时间：</b>2015年2期<br><b>ISSN：</b>1674-8689<br><b>关键词：</b>设计模式 教学改革 情境式教学 学做一体<br><b>摘要：</b>设计模式课程是高校软件工程专业的核心课程,与传统编程语言类课程不同,设计模式更加注重软件产品的工程化设计,因此需要对传统的计算机课程教学模式进行改革,以适应设计模式课程教学的要求.本文对设计模式课程的教学内容重新规划,引入故事性的教学情境,制定渐近式学做一体化教学方案,在课堂教学中将理论与实验充分融合,从而提高学生对设计模式课程的学习兴趣,加深知识印象,激发主观能动性,提升课程教学的整体效果.
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">5</div>
<font color="#666666">相似度：</font><span class='orange' >45</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >Java中有许多的设计<span style="background:#cbcbcb">模式</span>，比如<span style="background:#cbcbcb">装饰</span>器<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、工厂<span style="background:#cbcbcb">模式</span>、单例<span style="background:#cbcbcb">模式</span>等，下面着重介绍几种设计<span style="background:#cbcbcb">模式</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">模式</span>、适配器<span style="background:#cbcbcb">模式</span>、桥接<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">装饰</span><span style="background:#cbcbcb">模式</span>、组合<span style="background:#cbcbcb">模式</span>、外观<span style="background:#cbcbcb">模式</span>、享元<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、模板方法<span style="background:#cbcbcb">模式</span>、</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……23类为代表，如《设计模式之禅》D3、{HeadFirst设计模式》H1和《人月神话》哺1，都以此23种模式进行阐述。这23类设计模式分别为：单例模式、抽象工厂模式、建造者模式、工厂模式、原型<span class='green'>模式、适配器模式、桥接模式、装饰模式、组合模式、外观模式、享元模式、代理模式、模板方法模式、</span>命令模式、迭代器模式、观察者模式、中介者模式、备忘录模式、解释器模式、状态模式、策略模式、职责链……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《基于组件与WPF技术的矿井建设工程进度管理软件的研究与设计》<br><b>作者：</b>余昳超<br><b>分类号：</b>TP311.52<br><b>学科专业：</b>计算机软件与理论<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>邹海<br><b>学位授予单位：</b>安徽大学<br><b>学位年度：</b>2013<br><b>关键词：</b>组件技术 WPF技术 甘特图 矿井建设工程 进度管理
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">6</div>
<font color="#666666">相似度：</font><span class='orange' >45</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >Java中有许多的设计<span style="background:#cbcbcb">模式</span>，比如装饰<span style="background:#cbcbcb">器</span><span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、工厂<span style="background:#cbcbcb">模式</span>、单例<span style="background:#cbcbcb">模式</span>等，下面着重介绍几种设计<span style="background:#cbcbcb">模式</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">、外观<span style="background:#cbcbcb">模式</span>、备忘录<span style="background:#cbcbcb">模式</span>、享元<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、命令<span style="background:#cbcbcb">模式</span>、职责链<span style="background:#cbcbcb">模式</span>、中介者<span style="background:#cbcbcb">模式</span>、迭代<span style="background:#cbcbcb">器</span><span style="background:#cbcbcb">模式</span>、</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……)对象级模式：处理对象之间的关系，这些关系在程序运行时是可以变化的，具有动态性。包括抽象工厂模式、原型模式、建造者模式、策略模式、适配器模式（对象级）、单例模式、桥模式、组合模式、装饰模式<span class='green'>、外观模式、备忘录模式、享元模式、代理模式、命令模式、职责链模式、中介者模式、迭代器模式、</span>观察者模式、状态模式及访问者模式[29]。2.2.3设计模式与面向对象思想的结合将设计模式应用……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《基于设计模式的无人机飞控系统MBIT的设计与实现》<br><b>作者：</b>黄永洁<br><b>分类号：</b>V249.122<br><b>学科专业：</b>测试计量技术及仪器<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>刘强<br><b>学位授予单位：</b>电子科技大学<br><b>学位年度：</b>2011<br><b>关键词：</b>无人机 飞行控制系统 维护性机内自检测地面系统 设计模式
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">7</div>
<font color="#666666">相似度：</font><span class='orange' >44</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >Java<span style="background:#cbcbcb">中</span>有许多<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">设计</span><span style="background:#cbcbcb">模式</span>，比如<span style="background:#cbcbcb">装饰</span>器<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、工厂<span style="background:#cbcbcb">模式</span>、单例<span style="background:#cbcbcb">模式</span>等，下面着重介绍几种<span style="background:#cbcbcb">设计</span><span style="background:#cbcbcb">模式</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">。例如<span style="background:#cbcbcb">设计</span><span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">中</span><span style="background:#cbcbcb">的</span>外观<span style="background:#cbcbcb">模式</span>，适配器<span style="background:#cbcbcb">模式</span>，<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>，<span style="background:#cbcbcb">装饰</span><span style="background:#cbcbcb">模式</span>，桥<span style="background:#cbcbcb">模式</span>，组合<span style="background:#cbcbcb">模式</span>，享元<span style="background:#cbcbcb">模式</span>；</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……例如设计模式中的简单工厂模式，工厂方法模式，抽象工厂模式，创建者模式，原型模式，单例模式；(2)结构型：模式结构清晰，主要处理类或对象的组合，但是模式的每一部分的结构都专门负责完成某一职责<span class='green'>。例如设计模式中的外观模式，适配器模式，代理模式，装饰模式，桥模式，组合模式，享元模式；</span>(3)行为型：行为类模式主要描述类或对象之间的交互，以及类和对象的主要职责模板方法模式，观察者模式……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《设计模式及如何选择设计模式》<br><b>作者：</b>陈小丽<br><b>作者单位：</b>苏州大学计算机科学与技术学院,江苏 苏州,215006<br><b>参考文献：</b>2篇<br><b>页码：</b>P88—P88<br><b>页数：</b>1页<br><b>机标分类号：</b>U21 TV2<br><b>期刊名称：</b>《无线互联科技》<br><b>出版时间：</b>2014年2期<br><b>ISSN：</b>1672-6944<br><b>关键词：</b>设计模式 设计原则 设计模式的选择<br><b>摘要：</b>针对当前软件行业普遍借鉴的设计模式，提出了如何选择设计模式，讨论了设计原则。
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">8</div>
<font color="#666666">相似度：</font><span class='orange' >44</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >Java中有许多的设计<span style="background:#cbcbcb">模式</span>，比如<span style="background:#cbcbcb">装饰</span>器<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、工厂<span style="background:#cbcbcb">模式</span>、单例<span style="background:#cbcbcb">模式</span>等，下面着重介绍几种设计<span style="background:#cbcbcb">模式</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">，缺省适配<span style="background:#cbcbcb">模式</span>、合成<span style="background:#cbcbcb">模式</span>，<span style="background:#cbcbcb">装饰</span><span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、享元<span style="background:#cbcbcb">模式</span>、门面<span style="background:#cbcbcb">模式</span>、桥梁<span style="background:#cbcbcb">模式</span>。1、适配器(</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……创建模式它是通过给出一个原型对象来指明所要创建的对象的类型。然后复制这个原型对象的办法创建出更多的同类型的对象。二、结构模式结构模式(structuralPattern)描述如何将类或者对象结合在一起形成更大的结构。包括适配器模式<span class='green'>，缺省适配模式、合成模式，装饰模式、代理模式、享元模式、门面模式、桥梁模式。1、适配器(</span>Adapter)模式它是把一个类的接口变换成客户端所期待的另一种接口，从而使原本因接口不匹配而无法工作的两个……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《有线电视营业支撑系统技术方案实现与优化》<br><b>作者：</b>王琳<br><b>分类号：</b>TP311.5<br><b>学科专业：</b>软件工程<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>肖建新<br><b>学位授予单位：</b>湖南大学<br><b>学位年度：</b>2006<br><b>关键词：</b>有线电视营业支撑系统 Struts技术 Spring技术 Ajax 异步通信机制
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">9</div>
<font color="#666666">相似度：</font><span class='orange' >43</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >Java中<span style="background:#cbcbcb">有</span>许多<span style="background:#cbcbcb">的</span>设计<span style="background:#cbcbcb">模式</span>，比如装饰器<span style="background:#cbcbcb">模式</span>、代理<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">工厂</span><span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">单例</span><span style="background:#cbcbcb">模式</span>等，<span style="background:#cbcbcb">下面</span>着重<span style="background:#cbcbcb">介绍</span>几种设计<span style="background:#cbcbcb">模式</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">有</span>：<span style="background:#cbcbcb">单例</span><span style="background:#cbcbcb">模式</span>，<span style="background:#cbcbcb">工厂</span><span style="background:#cbcbcb">模式</span>，组合<span style="background:#cbcbcb">模式</span>和聚集<span style="background:#cbcbcb">模式</span>。其中<span style="background:#cbcbcb">单例</span><span style="background:#cbcbcb">模式</span>使用<span style="background:#cbcbcb">的</span>最多，<span style="background:#cbcbcb">下面</span>将重点<span style="background:#cbcbcb">介绍</span><span style="background:#cbcbcb">单例</span><span style="background:#cbcbcb">模式</span>。</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……如：解释器模式(Interpreter)，迭代器模式(Iterater)，中介者模式(Mediator)，观察者模式(Observer)，状态模式(State)，策略模式(Strategy)，模板模式(TemplateMethod)和访问者模式(Visitor)等等。论文中使用到<span class='green'>的模式有：单例模式，工厂模式，组合模式和聚集模式。其中单例模式使用的最多，下面将重点介绍单例模式。</span>1、单例模式单例模式属于创建者模式，它的特别之处在于保证了一个类只有一个实例，并提供了一个类的……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《城市多路口交通灯信号控制系统仿真软件开发》<br><b>作者：</b>顾会珍<br><b>分类号：</b>U491.54<br><b>学科专业：</b>系统工程<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>刘暾东<br><b>学位授予单位：</b>厦门大学<br><b>学位年度：</b>2007<br><b>关键词：</b>城市路网 交叉口 城市智能交通控制 多路口交通灯 信号控制系统
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">10</div>
<font color="#666666">相似度：</font><span class='orange' >42</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >Java中有许多<span style="background:#cbcbcb">的</span>设计<span style="background:#cbcbcb">模式</span>，比如<span style="background:#cbcbcb">装饰</span>器<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、工厂<span style="background:#cbcbcb">模式</span>、单例<span style="background:#cbcbcb">模式</span>等，<span style="background:#cbcbcb">下面</span>着重介绍几种设计<span style="background:#cbcbcb">模式</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">接<span style="background:#cbcbcb">模式</span>、组合<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">装饰</span><span style="background:#cbcbcb">模式</span>、门面<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、享元<span style="background:#cbcbcb">模式</span>[引。<span style="background:#cbcbcb">下面</span>主要讨论其中之一<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">装饰</span><span style="background:#cbcbcb">模式</span>。</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……n'’)；/*对应结构体各项装填数据与函数名*/1．2结构模式在面向对象的思想中，结构模式关注如何组合类或对象以获得更大的类或对象。它包括7种模式，分别是：适配器模式、桥<span class='green'>接模式、组合模式、装饰模式、门面模式、代理模式、享元模式[引。下面主要讨论其中之一的装饰模式。</span>装饰模式是以对客户端透明的方式来扩展对象的功能。从面向对象的角度来看，它能动态地给对象添加一些功能……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《面向对象设计模式的C语言实现》<br><b>作者：</b>朱进<br><b>作者单位：</b>东南大学,软件学院,江苏,南京,210096<br><b>参考文献：</b>5篇<br><b>被引次数：</b>3次（统计时间：2015年8月）<br><b>页码：</b>P99—P101,105<br><b>页数：</b>4页<br><b>分类号：</b>TP311.5<br><b>机标分类号：</b>TN4 H14<br><b>期刊名称：</b>《微机发展》<br><b>出版时间：</b>2005年11期<br><b>期刊级别：</b>ISTIC<br><b>ISSN：</b>1005-3751<br><b>关键词：</b>面向对象 设计模式 程序结构 C语言<br><b>摘要：</b>介绍了C语言成为嵌入式技术领域主要的程序设计语言的原因,及当前用C语言所编写的程序仍然存在的问题,然后介绍了面向对象的设计模式的概念及优点.并提出将面向对象的思想与C语言结合起来,接着用C语言实现了部分面向对象的设计模式,给出了其代码,并做了相应的注释,为优化C程序的结构提供了途径.最后总结了在C程序中使用这些设计模式的价值.文中所指的C语言均为标准C(ANSIC).
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">11</div>
<font color="#666666">相似度：</font><span class='orange' >42</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >Java中<span style="background:#cbcbcb">有</span>许多<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">设计</span><span style="background:#cbcbcb">模式</span>，比如装饰<span style="background:#cbcbcb">器</span><span style="background:#cbcbcb">模式</span>、代理<span style="background:#cbcbcb">模式</span>、工厂<span style="background:#cbcbcb">模式</span>、单例<span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">等</span>，下面着重介绍几种<span style="background:#cbcbcb">设计</span><span style="background:#cbcbcb">模式</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">，常用<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">有</span>模版<span style="background:#cbcbcb">模式</span>、观察者<span style="background:#cbcbcb">模式</span>、迭代<span style="background:#cbcbcb">器</span><span style="background:#cbcbcb">模式</span>、责任链<span style="background:#cbcbcb">模式</span>、命令<span style="background:#cbcbcb">模式</span>、状态<span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">等</span>。5<span style="background:#cbcbcb">设计</span><span style="background:#cbcbcb">模式</span>使用</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……软件开发过程的优化探讨·35·获得更大的结构，采用继承机制来组合接口或实现。常用的有合成模式、装饰模式、代理模式、享元模式、桥梁模式等。(3)行为型模式。它是主要描述算法和对象之间关系的关联模式<span class='green'>，常用的有模版模式、观察者模式、迭代器模式、责任链模式、命令模式、状态模式等。5设计模式使用</span>时存在的问题软件开发人员都意识到了设计模式的重要性，但是有时开发人员发现很难将设计模式与实际开发中需要……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《设计模式对软件开发过程的优化探讨》<br><b>作者：</b>潘利强<br><b>作者单位：</b>泉州轻工职业学院,福建晋江,362200<br><b>参考文献：</b>2篇<br><b>页码：</b>P34—P35<br><b>分类号：</b>TP301<br><b>期刊名称：</b>《软件导刊》<br><b>出版时间：</b>2012年3期<br><b>ISSN：</b>1672-7800<br><b>关键词：</b>设计模式 面向对象 程序设计 程序优化<br><b>摘要：</b>设计模式在面向对象程序设计中有着广泛的应用,通过它的使用能使程序更加精炼、更易理解.对设计模式产生的原因、工作原理、包含要素以及如何对程序进行优化进行了阐述.
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">12</div>
<font color="#666666">相似度：</font><span class='orange' >42</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >Java中有许多<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">设计</span><span style="background:#cbcbcb">模式</span>，比如装饰器<span style="background:#cbcbcb">模式</span>、代理<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">工厂</span><span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">单例</span><span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">等</span>，下面着重<span style="background:#cbcbcb">介绍</span>几种<span style="background:#cbcbcb">设计</span><span style="background:#cbcbcb">模式</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">仿真程序TSDG<span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">设计</span>思想，重点<span style="background:#cbcbcb">介绍</span>了<span style="background:#cbcbcb">工厂</span>方法<span style="background:#cbcbcb">模式</span>、适配器<span style="background:#cbcbcb">模式</span>、策略<span style="background:#cbcbcb">模式</span>和<span style="background:#cbcbcb">单例</span><span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">等</span>面向对象<span style="background:#cbcbcb">设计</span><span style="background:#cbcbcb">模式</span>在TSDG</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……电网教育部重点实验室，天津300072；3．积成电子股份有限公司，济南250100)摘要：分布式发电微网系统暂态过程研究需要相应仿真计算工具的支持。基于面向对象设计思想与现代软件设计架构，介绍了分布式发电微网系统暂态<span class='green'>仿真程序TSDG的设计思想，重点介绍了工厂方法模式、适配器模式、策略模式和单例模式等面向对象设计模式在TSDG</span>中的应用。基于面向对象设计模式开发的TS—DG，实现了模块间的低耦合和模块内部的高内聚，提高了程序的……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《面向对象的设计模式在暂态仿真中的应用》<br><b>作者：</b>雷金勇 李鹏 于学军 张君泉 王成山<br><b>作者单位：</b>南方电网科学研究院,广州,510080；天津大学智能电网教育部重点实验室,天津,300072；积成电子股份有限公司,济南,250100<br><b>参考文献：</b>14篇<br><b>被引次数：</b>1次（统计时间：2015年8月）<br><b>页码：</b>P35—P40<br><b>分类号：</b>TM743<br><b>机标分类号：</b>TP3 TM3<br><b>基金项目：</b>国家重大基础研究计划(973计划)资助项目;南方电网"智能电网关键技术研究"重大科技专项资助项目;济南"泉城学者"建设工程课题资助项目<br><b>期刊名称：</b>《电力系统及其自动化学报》<br><b>出版时间：</b>2012年3期<br><b>期刊级别：</b>ISTIC - PKU<br><b>ISSN：</b>1003-8930<br><b>关键词：</b>面向对象设计 设计模式 暂态仿真 分布式发电<br><b>摘要：</b>分布式发电微网系统暂态过程研究需要相应仿真计算工具的支持.基于面向对象设计思想与现代软件设计架构,介绍了分布式发电微网系统暂态仿真程序TSDG的设计思想,重点介绍了工厂方法模式、适配器模式、策略模式和单例模式等面向对象设计模式在TSDG中的应用.基于面向对象设计模式开发的TSDG,实现了模块间的低耦合和模块内部的高内聚,提高了程序的可扩展性和可复用性,能够灵活应对功能需求的变化.TSDG中多种设计模式的应用和集成方法具有一定的通用性.
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">13</div>
<font color="#666666">相似度：</font><span class='orange' >41</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >Java中有许多的设计<span style="background:#cbcbcb">模式</span>，比如装饰器<span style="background:#cbcbcb">模式</span>、代理<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">工厂</span><span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">单例</span><span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">等</span>，下面着重介绍<span style="background:#cbcbcb">几</span><span style="background:#cbcbcb">种</span>设计<span style="background:#cbcbcb">模式</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">以下<span style="background:#cbcbcb">几</span><span style="background:#cbcbcb">种</span>：简单<span style="background:#cbcbcb">工厂</span><span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">工厂</span>方法<span style="background:#cbcbcb">模式</span>、抽象<span style="background:#cbcbcb">工厂</span><span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">单例</span><span style="background:#cbcbcb">模式</span>、多例<span style="background:#cbcbcb">模式</span>、建造<span style="background:#cbcbcb">模式</span>、原始模型<span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">等</span>。</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……抽象化。一些系统在创建对象时，需要动态地决定怎样创建对象，创建万方数据֢·212·计算机技术与发展第16卷哪些对象，以及如何组合和表示这些对象。创建模式描述了怎样构造和封装这些动态的决定。创建型模式包括<span class='green'>以下几种：简单工厂模式、工厂方法模式、抽象工厂模式、单例模式、多例模式、建造模式、原始模型模式等。</span>(2)结构型模式描述如何将类或者对象结合在一起形成更大的结构。结构型类模式采用继承机制来组合接口……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学术期刊)：</font><br>
<b>篇名：</b>《物流信息系统中设计模式的应用》<br><b>作者：</b>刘国静 余青松 郑骏<br><b>作者单位：</b>华东师范大学,计算中心,上海,200062<br><b>参考文献：</b>5篇<br><b>被引次数：</b>5次（统计时间：2015年8月）<br><b>页码：</b>P211—P213,216<br><b>页数：</b>4页<br><b>分类号：</b>TP311<br><b>机标分类号：</b>TH1 V35<br><b>期刊名称：</b>《计算机技术与发展》<br><b>出版时间：</b>2006年5期<br><b>期刊级别：</b>ISTIC<br><b>ISSN：</b>1005-3751<br><b>关键词：</b>设计模式 单例模式 适配器模式 策略模式 PDIS<br><b>摘要：</b>随着信息系统的不断发展,客户对软件系统提出了更高的要求.由于软件开发固有的复杂性、软件实现的不易复制性,软件的生产过程面临许多问题.设计模式提供了对问题簇的设计精良的解决方案.文中通过在物流信息系统中引入设计模式,具体分析了三种代表性的设计模式在物流信息系统中的应用,证明了模式设计的引入有助于提高软件的可复用性、可维护性以及稳定性和安全性.
</td>
</tr>
</table>




<div style="display:none;">
<table id="xiugaijianyi" width="100%" cellpadding="3" cellspacing="3" style="margin-bottom:15px;margin-top:15px;border: 1px solid #C0C0C0;"
bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF">
<tbody>
<tr>
<td width="100%">
<div class="green" style="font-size:17px;padding-left:5px;">
该句修改建议（ChaoXidudutishiTorpalces87sbqwopahasw4）
</div>
</td>
</tr>
<tr>
<td>
<div class="shubu">
1
</div>
<span style="  padding-left:10px;font-size:15px;">
原句与相似内容重合部分（重点修改标红部分）：
</span>
</td>
</tr>
<tr>
<td>
<font class="green">

</font>
</td>
</tr>
<tr>
<td>
<div class="shubu">
2
</div>
<span style="  padding-left:10px;font-size:15px;">
同义词：
</span>
</td>
</tr>
<tr>
<td width="100%" align="left">
<span class="red">比如：</span><span class="green">好比 </span><br/> <span class="red">代理：</span><span class="green">代办 代庖 署理 </span><br/> <span class="red">工厂：</span><span class="green">工场 </span><br/> <span class="red">着重：</span><span class="green">侧重 偏重 </span><br/> <span class="red">介绍：</span><span class="green">先容 </span><br/>
</td>
</tr>
</tbody>
</table>
</div>

<div style="display:block;">
<a href="#">回到顶部</a>
</div>

<div style="margin-bottom:100px"></div>
<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2017 PaperPass
</p>
</div>
<div style="margin-bottom:700px"></div>
</body>
</html>
