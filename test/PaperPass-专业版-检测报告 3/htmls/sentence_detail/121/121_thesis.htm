<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN""http://www.w3.org/TR/html4/loose.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="content-type" content="text/html; charset=utf-8" />
<title>PaperPass 最权威论文抄袭检测系统</title>
<style type="text/css">
<!--
user_icon {
color: #FFFFFF;
}
body,td,th {
font-family: "微软雅黑";
font-size: 13px;
}
h1,h2,h3,h4,h5,h6 {
font-family: "宋体";
}
demo_padding {
line-height: 30px;
}
html
{
overflow-x:hidden;
overflow-y:scroll;
}
.liebiao {
border-bottom-width: 1px;
border-bottom-style: dashed;
border-bottom-color: #CCCCCC;
height: 0px;
margin-top:10px;
margin-bottom:10px;
float: left;
width: 90%;
}
.liebiao ul {
list-style-type: none;
display: block;
margin: 0px;
clear: none;
}
.zhengwen {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
}
.zhengwencenter {
padding-right: 15px;
padding-left: 0px;
margin-bottom:10px;
font-size: 13px;
line-height: 20px;
color: #666666;
text-align:center
}
.neikuang {
background-color: #EBEBEB;
border: 1px dashed #999999;
padding-right: 10px;
padding-left: 10px;
}
.shubu{
float: left;
height: 15px;
width: 15px;
background-color: #FFFFFF;
border: 1px solid #999999;
text-align: center;
vertical-align: middle;
display: block;
font-size: 13px;
}
.kuang {
border: 1px solid #999999;
}
.red{color:#FF0000}
.orange{color:#FF6600}
.green{color:#008000}

a:hover {color:#000000}
a:active {color:#000000}

a{TEXT-DECORATION:none}

-->
</style>
</head>
<body>
<div class="zhengwen"><a href="121.htm">综合<sup>13</sup></a>&nbsp;&nbsp;|&nbsp;&nbsp;<a href="121_local.htm">本地库<sup>13</sup></a>（<a href="121_periodical.htm">期刊<sup>7</sup></a>、<b>学位<sup>6</sup></b>、<a href="121_conference.htm">会议<sup></sup></a>、<a href="121_book.htm">图书<sup>No</sup></a>）&nbsp;&nbsp;|&nbsp;&nbsp;<a href="121_net.htm">互联网<sup></sup></a><br /></div>
<div class="zhengwen">
语句：<span class='orange' >Java中有许多的设计模式，比如装饰器模式、代理模式、工厂模式、单例模式等，下面着重介绍几种设计模式。</span><br><br>
<div style="display:none;">该句相似度：<span class='orange' >48</span>%<a href='#xiugaijianyi' style='padding-left:30px;'>查看该句修改建议</a><b>（ChaoXidudutishiTorpalces87sbqwopahasw4）</b><br><br></div>
在学位论文库中共找出相似内容：6个
</div>

<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">1</div>
<font color="#666666">相似度：</font><span class='orange' >48</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >Java中有许多的<span style="background:#cbcbcb">设计</span><span style="background:#cbcbcb">模式</span>，比如<span style="background:#cbcbcb">装饰</span>器<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、工厂<span style="background:#cbcbcb">模式</span>、单例<span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">等</span>，下面着重介绍几种<span style="background:#cbcbcb">设计</span><span style="background:#cbcbcb">模式</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">结构型<span style="background:#cbcbcb">设计</span><span style="background:#cbcbcb">模式</span>，如合成<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">装饰</span><span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、享元<span style="background:#cbcbcb">模式</span>、门面<span style="background:#cbcbcb">模式</span>、桥梁<span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">等</span>。行为型模式，如</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……组件中重复出现的结构，这种结构解决在一定的背景中的具有一般性的设计问题。设计模式常常划分成不同的种类，常见的种类有：创建型设计模式，如工厂方法模式、抽象工厂模式、原型模式、单例模式，建造模式等。<span class='green'>结构型设计模式，如合成模式、装饰模式、代理模式、享元模式、门面模式、桥梁模式等。行为型模式，如</span>模版方法模式、观察者模式、迭代模式、责任链模式、备忘录模式、命令模式、状态模式、访问者模式等等[25……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《基于SOA架构的物流及其增值服务计费系统的研究与实现》<br><b>作者：</b>谢逸<br><b>分类号：</b>TP393.09<br><b>学科专业：</b>软件工程<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>袁志璎<br><b>学位授予单位：</b>上海交通大学<br><b>学位年度：</b>2011<br><b>关键词：</b>物流管理 增值服务计费系统 企业应用集成 面向服务架构 异构ERP系统
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">2</div>
<font color="#666666">相似度：</font><span class='orange' >47</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >Java中有许多的设计<span style="background:#cbcbcb">模式</span>，比如<span style="background:#cbcbcb">装饰</span>器<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、工厂<span style="background:#cbcbcb">模式</span>、单例<span style="background:#cbcbcb">模式</span>等，下面着重介绍几种设计<span style="background:#cbcbcb">模式</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">、缺省适配器<span style="background:#cbcbcb">代理</span>、合成<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">装饰</span><span style="background:#cbcbcb">模式</span>、代办<span style="background:#cbcbcb">模式</span>、享元不变、门面策略、桥梁<span style="background:#cbcbcb">模式</span>、不乱<span style="background:#cbcbcb">模式</span>、战略<span style="background:#cbcbcb">模式</span>、</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……模式有：工厂方式模式、适配器模式、缺省适方法模式、解释器对象、模版方式模式等。属于东西模式的设计方法有：简单工厂模式、工厂方式模式、抽象工厂模式建造单例模式、多例模式、制作模式、原始模型模式、适配器模式<span class='green'>、缺省适配器代理、合成模式、装饰模式、代办模式、享元不变、门面策略、桥梁模式、不乱模式、战略模式、</span>观察者模式、迭命令予模式、责任链模式、下令模式、访问录模式、调停态模式、会见者模式、补救者模式等……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《基于设计模式的数据库连接池技术和应用》<br><b>作者：</b>李富中<br><b>分类号：</b>TP319<br><b>学科专业：</b>计算机技术<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>高峰<br><b>学位授予单位：</b>山东大学<br><b>学位年度：</b>2006<br><b>关键词：</b>面向对象技术 设计模式 数据库连接池 软件开发
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">3</div>
<font color="#666666">相似度：</font><span class='orange' >45</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >Java中有许多的设计<span style="background:#cbcbcb">模式</span>，比如<span style="background:#cbcbcb">装饰</span>器<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、工厂<span style="background:#cbcbcb">模式</span>、单例<span style="background:#cbcbcb">模式</span>等，下面着重介绍几种设计<span style="background:#cbcbcb">模式</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">模式</span>、适配器<span style="background:#cbcbcb">模式</span>、桥接<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">装饰</span><span style="background:#cbcbcb">模式</span>、组合<span style="background:#cbcbcb">模式</span>、外观<span style="background:#cbcbcb">模式</span>、享元<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、模板方法<span style="background:#cbcbcb">模式</span>、</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……23类为代表，如《设计模式之禅》D3、{HeadFirst设计模式》H1和《人月神话》哺1，都以此23种模式进行阐述。这23类设计模式分别为：单例模式、抽象工厂模式、建造者模式、工厂模式、原型<span class='green'>模式、适配器模式、桥接模式、装饰模式、组合模式、外观模式、享元模式、代理模式、模板方法模式、</span>命令模式、迭代器模式、观察者模式、中介者模式、备忘录模式、解释器模式、状态模式、策略模式、职责链……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《基于组件与WPF技术的矿井建设工程进度管理软件的研究与设计》<br><b>作者：</b>余昳超<br><b>分类号：</b>TP311.52<br><b>学科专业：</b>计算机软件与理论<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>邹海<br><b>学位授予单位：</b>安徽大学<br><b>学位年度：</b>2013<br><b>关键词：</b>组件技术 WPF技术 甘特图 矿井建设工程 进度管理
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">4</div>
<font color="#666666">相似度：</font><span class='orange' >45</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >Java中有许多的设计<span style="background:#cbcbcb">模式</span>，比如装饰<span style="background:#cbcbcb">器</span><span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、工厂<span style="background:#cbcbcb">模式</span>、单例<span style="background:#cbcbcb">模式</span>等，下面着重介绍几种设计<span style="background:#cbcbcb">模式</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">、外观<span style="background:#cbcbcb">模式</span>、备忘录<span style="background:#cbcbcb">模式</span>、享元<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、命令<span style="background:#cbcbcb">模式</span>、职责链<span style="background:#cbcbcb">模式</span>、中介者<span style="background:#cbcbcb">模式</span>、迭代<span style="background:#cbcbcb">器</span><span style="background:#cbcbcb">模式</span>、</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……)对象级模式：处理对象之间的关系，这些关系在程序运行时是可以变化的，具有动态性。包括抽象工厂模式、原型模式、建造者模式、策略模式、适配器模式（对象级）、单例模式、桥模式、组合模式、装饰模式<span class='green'>、外观模式、备忘录模式、享元模式、代理模式、命令模式、职责链模式、中介者模式、迭代器模式、</span>观察者模式、状态模式及访问者模式[29]。2.2.3设计模式与面向对象思想的结合将设计模式应用……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《基于设计模式的无人机飞控系统MBIT的设计与实现》<br><b>作者：</b>黄永洁<br><b>分类号：</b>V249.122<br><b>学科专业：</b>测试计量技术及仪器<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>刘强<br><b>学位授予单位：</b>电子科技大学<br><b>学位年度：</b>2011<br><b>关键词：</b>无人机 飞行控制系统 维护性机内自检测地面系统 设计模式
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">5</div>
<font color="#666666">相似度：</font><span class='orange' >44</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >Java中有许多的设计<span style="background:#cbcbcb">模式</span>，比如<span style="background:#cbcbcb">装饰</span>器<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、工厂<span style="background:#cbcbcb">模式</span>、单例<span style="background:#cbcbcb">模式</span>等，下面着重介绍几种设计<span style="background:#cbcbcb">模式</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green">，缺省适配<span style="background:#cbcbcb">模式</span>、合成<span style="background:#cbcbcb">模式</span>，<span style="background:#cbcbcb">装饰</span><span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">代理</span><span style="background:#cbcbcb">模式</span>、享元<span style="background:#cbcbcb">模式</span>、门面<span style="background:#cbcbcb">模式</span>、桥梁<span style="background:#cbcbcb">模式</span>。1、适配器(</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……创建模式它是通过给出一个原型对象来指明所要创建的对象的类型。然后复制这个原型对象的办法创建出更多的同类型的对象。二、结构模式结构模式(structuralPattern)描述如何将类或者对象结合在一起形成更大的结构。包括适配器模式<span class='green'>，缺省适配模式、合成模式，装饰模式、代理模式、享元模式、门面模式、桥梁模式。1、适配器(</span>Adapter)模式它是把一个类的接口变换成客户端所期待的另一种接口，从而使原本因接口不匹配而无法工作的两个……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《有线电视营业支撑系统技术方案实现与优化》<br><b>作者：</b>王琳<br><b>分类号：</b>TP311.5<br><b>学科专业：</b>软件工程<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>肖建新<br><b>学位授予单位：</b>湖南大学<br><b>学位年度：</b>2006<br><b>关键词：</b>有线电视营业支撑系统 Struts技术 Spring技术 Ajax 异步通信机制
</td>
</tr>
</table>


<table width="100%" cellspacing="3" style="margin-bottom:15px;border: 1px solid #C0C0C0" bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF" cellpadding="3">
<tr>
<td align="right" width="100%">
<div class="shubu">6</div>
<font color="#666666">相似度：</font><span class='orange' >43</a><font color="#666">%</font>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">您的句子（灰色背景是与相似句子重合的部分）：</font><br>
<span class='orange' >Java中<span style="background:#cbcbcb">有</span>许多<span style="background:#cbcbcb">的</span>设计<span style="background:#cbcbcb">模式</span>，比如装饰器<span style="background:#cbcbcb">模式</span>、代理<span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">工厂</span><span style="background:#cbcbcb">模式</span>、<span style="background:#cbcbcb">单例</span><span style="background:#cbcbcb">模式</span>等，<span style="background:#cbcbcb">下面</span>着重<span style="background:#cbcbcb">介绍</span>几种设计<span style="background:#cbcbcb">模式</span>。</span><br>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子：</font><br>
<span class="green"><span style="background:#cbcbcb">的</span><span style="background:#cbcbcb">模式</span><span style="background:#cbcbcb">有</span>：<span style="background:#cbcbcb">单例</span><span style="background:#cbcbcb">模式</span>，<span style="background:#cbcbcb">工厂</span><span style="background:#cbcbcb">模式</span>，组合<span style="background:#cbcbcb">模式</span>和聚集<span style="background:#cbcbcb">模式</span>。其中<span style="background:#cbcbcb">单例</span><span style="background:#cbcbcb">模式</span>使用<span style="background:#cbcbcb">的</span>最多，<span style="background:#cbcbcb">下面</span>将重点<span style="background:#cbcbcb">介绍</span><span style="background:#cbcbcb">单例</span><span style="background:#cbcbcb">模式</span>。</span>
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">相似句子原文片段：</font><br>
……如：解释器模式(Interpreter)，迭代器模式(Iterater)，中介者模式(Mediator)，观察者模式(Observer)，状态模式(State)，策略模式(Strategy)，模板模式(TemplateMethod)和访问者模式(Visitor)等等。论文中使用到<span class='green'>的模式有：单例模式，工厂模式，组合模式和聚集模式。其中单例模式使用的最多，下面将重点介绍单例模式。</span>1、单例模式单例模式属于创建者模式，它的特别之处在于保证了一个类只有一个实例，并提供了一个类的……
</td>
</tr>
<tr>
<td align="left" width="100%">
<font color="#666666">来源(学位论文)：</font><br>
<b>篇名：</b>《城市多路口交通灯信号控制系统仿真软件开发》<br><b>作者：</b>顾会珍<br><b>分类号：</b>U491.54<br><b>学科专业：</b>系统工程<br><b>授予学位：</b>硕士<br><b>导师姓名：</b>刘暾东<br><b>学位授予单位：</b>厦门大学<br><b>学位年度：</b>2007<br><b>关键词：</b>城市路网 交叉口 城市智能交通控制 多路口交通灯 信号控制系统
</td>
</tr>
</table>




<div style="display:none;">
<table id="xiugaijianyi" width="100%" cellpadding="3" cellspacing="3" style="margin-bottom:15px;margin-top:15px;border: 1px solid #C0C0C0;"
bordercolorlight="#FFFFFF" bordercolordark="#FFFFFF">
<tbody>
<tr>
<td width="100%">
<div class="green" style="font-size:17px;padding-left:5px;">
该句修改建议（ChaoXidudutishiTorpalces87sbqwopahasw4）
</div>
</td>
</tr>
<tr>
<td>
<div class="shubu">
1
</div>
<span style="  padding-left:10px;font-size:15px;">
原句与相似内容重合部分（重点修改标红部分）：
</span>
</td>
</tr>
<tr>
<td>
<font class="green">

</font>
</td>
</tr>
<tr>
<td>
<div class="shubu">
2
</div>
<span style="  padding-left:10px;font-size:15px;">
同义词：
</span>
</td>
</tr>
<tr>
<td width="100%" align="left">
<span class="red">比如：</span><span class="green">好比 </span><br/> <span class="red">代理：</span><span class="green">代办 代庖 署理 </span><br/> <span class="red">工厂：</span><span class="green">工场 </span><br/> <span class="red">着重：</span><span class="green">侧重 偏重 </span><br/> <span class="red">介绍：</span><span class="green">先容 </span><br/>
</td>
</tr>
</tbody>
</table>
</div>

<div style="display:block;">
<a href="#">回到顶部</a>
</div>

<div style="margin-bottom:100px"></div>
<div class="zhengwencenter">
<p>
检测报告由<a href="http://www.paperpass.com/" target="_blank">PaperPass</a>文献相似度检测系统生成
</p>
<p>
Copyright © 2007-2017 PaperPass
</p>
</div>
<div style="margin-bottom:700px"></div>
</body>
</html>
